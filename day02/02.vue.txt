事件修饰符
.stop :阻止冒泡

.prevent: 阻止默认行为

.capture: 实现捕获触发

.seif: 实现只有点击当前元素才会触发事件处理函数

.once: 只触发一次事件处理函数

.stop 和 .seif 的区别
    .seif: 只会阻止自己身上冒泡行为的触发 并不会真正阻止 冒泡的行为
    .stop:

在Vue中只有一个指令可以实现双向绑定: v-model 

v-bind 只能实现单向绑定,从M 自动绑定到 V, 无法实现数据双向绑定

v-model指令: 
    用户于input交互时,修改的时value属性的值 所以v-model只能绑定value
    特点:
        可以从M层绑定到V层,还可以在用户修改value属性时 自动同步到M层

// 颜色操作
    以前在DOM阶段操作样式的两种方法:


    在vue中操作样式的方法:
        第一种使用方式直接传递一个数组 在class需要使用 v-bind做数据绑定;
        在数组中使用三元表达式;
        在数组中使用对象来代替三元表达式,提高代码的可读性;
        在为class 使用v-bind绑定 对象的时候 , 对象的属性时类名 由于对象的属性可带引号, 也可不带引号

对象就时无序键值对的集合

遍历对象身上的键值对的时候 除了 有 val key, 第三个位置还有一个索引
v-for循环的时候 key属性只能使用 number获取string
key 在使用的时候 必须使用 v-bind 属性绑定的形式 ,自动key的值
in后面可以烦 普通数组 对象数组 对象 还有数字

 <!-- v-for循环的时候key属性 只能使用number 或者 string
        key 在使用的时候必须使用v-bind属性绑定的形式 指定key的值 -->
在组件中使用v-for循环的时候 或者在一些特殊情况中 如果v-for有问题必须使用v-for的同时，指定唯一的字符串/数字 类型  :key值


v-if 和 v-show都时用于控制元素的现实隐藏的
v-if 的特点： 每次都会重新删除或创建元素
v-show 的特点： 每次不会重新进行dom的删除和创建操作， 只是切换了元素 display:none 样式
        <!-- v-if有较高的切换性能消耗 -->
        <!-- v-show有较高的初始渲染消耗 -->
        <!-- 如果元素涉及到频繁的切换 最好不要用v-if -->
        <!-- 如果元素可能不会显示出来给用户看到推荐使用v-if -->


在vue中使用事件绑定机制 为元素指定处理函数的时候 如果加了小括号 就可以给函数传参

在数组的some方法中 如果return true 就会立即终止这个数组的后续循环

forEach some filter findIndex 这些都是数组的新方法
                    // 都回对数组的每一项 进行遍历 执行相关的操作

 // es6中 为字符串提供一个新的方法 叫做 string.prototype.includes('要包含的字符串')
   // 如果包含返回true 否则 false